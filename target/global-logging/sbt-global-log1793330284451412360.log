[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.1 (Amazon.com Inc. Java 11.0.25)
[debug] Load.defaultLoad until apply took 1.1351ms
[debug]           Load.loadUnit: plugins took 17.1373ms
[debug]           Load.loadUnit: defsScala took 0.0028ms
[debug] [Loading] Scanning directory C:\Users\pc\IdeaProjects\TSP\project
[debug]             Load.loadUnit: mkEval took 0.1536ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\pc\IdeaProjects\TSP\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 0.9998 ms
[info] loading settings for project tsp-build from idea.sbt ...
[debug]               Load.resolveProject(tsp-build) took 0.8598ms
[debug]             Load.loadTransitive: finalizeProject(Project(id tsp-build, base: C:\Users\pc\IdeaProjects\TSP\project, plugins: List(<none>))) took 2.1864ms
[debug] [Loading] Done in C:\Users\pc\IdeaProjects\TSP\project, returning: (tsp-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 17.185ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.4219ms
[debug]         Load.loadUnit(file:/C:/Users/pc/IdeaProjects/TSP/project/, ...) took 35.1205ms
[debug]       Load.apply: load took 35.8214ms
[debug]       Load.apply: resolveProjects took 0.0695ms
[debug]       Load.apply: finalTransforms took 4.7234ms
[debug]       Load.apply: config.delegates took 0.2287ms
[debug]       Load.apply: Def.make(settings)... took 40.9023ms
[debug]       Load.apply: structureIndex took 15.7673ms
[debug]       Load.apply: mkStreams took 0.0029ms
[info] loading project definition from C:\Users\pc\IdeaProjects\TSP\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 268.6254ms
[debug]     Load.loadUnit: defsScala took 0.0032ms
[debug] [Loading] Scanning directory C:\Users\pc\IdeaProjects\TSP
[debug]       Load.loadUnit: mkEval took 0.2586ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 0.8893 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 16.9778ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\pc\IdeaProjects\TSP, plugins: List(<none>))) took 18.1937ms
[debug] [Loading] Done in C:\Users\pc\IdeaProjects\TSP, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 58.8722ms
[debug]     Load.loadUnit: cleanEvalClasses took 0.5848ms
[debug]   Load.loadUnit(file:/C:/Users/pc/IdeaProjects/TSP/, ...) took 328.438ms
[debug] Load.apply: load took 329.3045ms
[debug] Load.apply: resolveProjects took 0.0749ms
[debug] Load.apply: finalTransforms took 11.5488ms
[debug] Load.apply: config.delegates took 0.172ms
[debug] Load.apply: Def.make(settings)... took 41.2851ms
[debug] Load.apply: structureIndex took 11.8978ms
[debug] Load.apply: mkStreams took 0.002ms
[info] set current project to TSP (in build file:/C:/Users/pc/IdeaProjects/TSP/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(idea-shell, None, None)
